import smbus
import time

# 定义 I2C 总线编号和 ADS1115 地址
bus_num = 1
address = 0x48

# 初始化 I2C 总线
bus = smbus.SMBus(bus_num)

# 配置 ADS1115 寄存器，选择通道 0 和增益 1
"""
在向 ADS1115 模块写入数据时，我们需要传入以下参数：

i2c_address：ADS1115 模块的 I2C 地址，默认为 0x48。
register：要写入的寄存器地址，对于 ADS1115 模块而言，我们需要写入的是配置寄存器（0x01），因此 register 的值应该为 0x01。
values：要写入的数据列表，对于 ADS1115 模块而言，我们需要写入两个字节的配置数据，因此 values 的长度应该为 2。

第一个字节（MSB）表示配置寄存器的高 8 位，它的二进制表示为 11000011，其中前两位 11 表示选择 AIN0 作为输入通道，接下来两位 00 表示选择增益为 1，最后四位 0011 表示对应的二进制数值为 3，表示将采样速率设置为 860 SPS。
第二个字节（LSB）表示配置寄存器的低 8 位，它的二进制表示为 10000011，其中前两位 10 表示连续转换模式，接下来一位 0 表示禁用比较器功能，再接下来一位 0 表示比较器输出极性为低电平，最后四位 0011 表示比较器的触发阈值为默认值（禁用比较器功能时，这四位的值没有任何作用）。
如果你想选择 AIN1 作为输入通道，需要将配置寄存器的第 15 位（即 MSB 的第 3 位）设置为 1，表示选择 AIN1 作为输入通道。因此，你需要将配置数据的第一个字节的前两位从 11 改为 10，即将 0xC3 改为 0x83。
如果你想选择 AIN2 或 AIN3 作为输入通道，需要将配置寄存器的第 14 位和第 15 位分别设置为 1 和 0（AIN2）或 1 和 1（AIN3）
ANI0: C3
ANI1: 83
ANI2: A3
ANi3: B3
"""
bus.write_i2c_block_data(address, 0x01, [0xC3, 0x83])

# 等待转换完成
time.sleep(0.1)

# 读取 ADC 值
""""
在读取 ADS1115 模块的数据时，我们需要传入以下参数：

i2c_address：ADS1115 模块的 I2C 地址，默认为 0x48。
register：要读取的寄存器地址，对于 ADS1115 模块而言，我们通常需要读取的是数据寄存器（0x00），因此 register 的值应该为 0x00。
length：要读取的字节数，对于 ADS1115 模块而言，每个 ADC 值占用两个字节，因此 length 的值应该为 2。

"""
data = bus.read_i2c_block_data(address, 0x00, 2)
# 将高位和地位寄存器中的值进行合并
adc_value = (data[0] << 8) | data[1]

# 将 ADC 值转换为电压值
voltage = adc_value / 32767.0 * 4.096

# 打印电压值
print("Voltage: {:.3f} V".format(voltage))
